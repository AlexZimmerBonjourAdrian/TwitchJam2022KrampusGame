	return 0;
}

//first two variables of range are for horizontal loop
//second two are for vertical loop
float4 GetMeanAndVariance(float2 UV, float4 Range, float2x2 RotationMatrix)
{
	int SceneTexIndex = 14;
	float2 TexelSize = View.ViewSizeAndInvSize.zw;
	
	float3 Mean = float3(0.0f, 0.0f, 0.0f);
	float3 Variance = float3(0.0f, 0.0f, 0.0f);
	int Samples = 0;

	for(int y = Range.z; y < Range.w; ++y)
	{
		for(int x = Range.x; x < Range.y; ++x)
		{	
			float2 Offset = mul(float2(x, y) * TexelSize, RotationMatrix);
			float3 Pixel = SceneTextureLookup(UV + Offset, SceneTexIndex, false).rgb;
			
			Mean += Pixel;
			Variance += Pixel * Pixel;
			++Samples;
		}
	}
	
	//int Samples = Range.w - Range.z + Range.y - Range.x;
	Mean /= Samples;
	Variance /= Samples;
	Variance -= Mean * Mean;
	
	float TotalVariance = Variance.r + Variance.g + Variance.b;
	return float4(Mean.r, Mean.g, Mean.b, TotalVariance);
}

float GetLineAngle(float2 UV)
{
	float GradX = 0.0f;
	float GradY = 0.0f;
	float SobelX[9] = { 
		-1, -2, -1, 
		 0,  0,  0, 
		 1,  2,  1 
	};
	float SobelY[9] = {
		-1, 0, 1,
		-2, 0, 2, 
		-1, 0, 1
	};
	
	int index = 0;
	
	for(int y = -1; y <= 1; ++y)
	{
		for(int x = -1; x <= 1; ++x)
		{
			float2 TexelSize = View.ViewSizeAndInvSize.zw;
			int SceneTexIndex = 14;
			
			float2 Offset =  float2(x, y) * TexelSize;
			float3 Pixel = SceneTextureLookup(UV + Offset, SceneTexIndex, false);
			float PixelValue = dot(Pixel, float3(0.3f, 0.59f, 0.11f));
			
			GradX += SobelX[index] * PixelValue;
			GradY += SobelY[index] * PixelValue;
			++index;
		}
	}
	
	return atan(GradY / GradX);
