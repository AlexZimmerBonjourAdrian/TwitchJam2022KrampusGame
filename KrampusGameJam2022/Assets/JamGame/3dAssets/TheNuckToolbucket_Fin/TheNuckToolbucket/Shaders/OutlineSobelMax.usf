//sobel edge detection on post process input 0 scene texture
//I made a mistake originally by making the if statement evaluate min, then max, while 
//it should've been either two min or two max. so I made two versions to test in the editor
//the min version is called just SobelEdgePP.usf
//INPUTS: float2 TexelSize, float OffsetScale (line thickness), float Threshold


int SceneTextureId = 14;

float SobelKernelH[] = {
	-1.0f, -2.0f, -1.0f,
	0.0f, 0.0f, 0.0f,
	1.0f, 2.0f, 1.0f
};

float SobelKernelV[] = {
	-1.0f, 0.0f, 1.0f,
	-2.0f, 0.0f, 2.0f,
	-1.0f, 0.0f, 1.0f
};

int KernelDim = 3;

float2 UV = GetDefaultSceneTextureUV(Parameters, SceneTextureId);
float3 SobelH, SobelV;
float Result;

for(int y = -KernelDim / 2; y <= KernelDim / 2; ++y)
{
	for(int x = -KernelDim / 2; x <= KernelDim / 2; ++x)
	{
		float2 Coords = UV + float2(x, y) * OffsetScale * TexelSize;
		float3 Sample =  SceneTextureLookup(Coords, SceneTextureId, false).rgb;
		
		SobelH += Sample * SobelKernelH[(y + KernelDim / 2) * KernelDim + (x + KernelDim / 2)];
		SobelV += Sample * SobelKernelV[(y + KernelDim / 2) * KernelDim + (x + KernelDim / 2)];
	}
}

float3 Final = SobelH * SobelH + SobelV * SobelV;

//if(min(Final.r, max(Final.g, Final.b)) > Threshold)
if(max(Final.r, max(Final.g, Final.b)) > Threshold)
{
	Result = 0.0f;
}
else
{
	Result = 1.0f;
}

return Result;